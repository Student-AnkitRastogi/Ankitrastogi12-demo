//using base case and backTrack

class Solution {
private:
    void result(vector<int> nums ,  vector<vector<int>>& ans , int i) {
        //base case
        if(i >= nums.size()) {
            ans.push_back(nums);
            return;
        }
        for(int j = i; j < nums.size() ; j++) {
            swap(nums[i] , nums[j]);
            result(nums , ans , i+1);
            //backtrack kerne ke liye
            swap(nums[i] , nums[j]);
        }
    }
public:
    vector<vector<int>> permute(vector<int>& nums) {
        vector<vector<int>> ans;
        int i = 0;
        result(nums , ans , i);
        return ans;
    }
};
